AWSTemplateFormatVersion: '2010-09-09'
Description: Cloudformation template for creating AWS S3 Bucket

Parameters:
  BucketName:
    Type: String
    Description: Name for s3 bucket (Name must begin and end with a letter or number and consist only of lowercase letters, numbers, and hyphens (-).)
    AllowedPattern: (?=^.{3,63}$)^[a-z0-9][a-z0-9-]*[a-z0-9]
    ConstraintDescription: Name must begin and end with a letter or number and consist only of lowercase letters, numbers, and hyphens (-).
    Default: test-bucket-01

  LogBucketName:
    Type: String
    Description: Name for s3 bucket which stores the logs(Name must begin and end with a letter or number and consist only of lowercase letters, numbers, and hyphens (-).)
    AllowedPattern: (?=^.{3,63}$)^[a-z0-9][a-z0-9-]*[a-z0-9]
    ConstraintDescription: Name must begin and end with a letter or number and consist only of lowercase letters, numbers, and hyphens (-).
    Default: test-bucket-logs-01

  ResourceOwner:
    Type: String
    Description: Tag to be used to identify the resource ownership. provide a resource owner name or entity which owns this resource.
    Default: localstack

Resources:
  S3BucketLogs:
    Type: AWS::S3::Bucket
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: "This bucket is used for storing logs; enabling access logging will lead to recursive logging."
    Properties:  
      BucketName: !Sub ${LogBucketName}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
      Tags:
        - Key: "owner"
          Value: !Sub ${ResourceOwner}

  S3BucketPolicyLogs:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketLogs
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowLogDelivery
            Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Action:
              - s3:PutObject
            Resource: 
              - !Sub "${S3BucketLogs.Arn}/*"
          - Effect: Allow
            Principal:
              AWS: 
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 
              - s3:GetObject
            Resource: !Sub arn:aws:s3:::${LogBucketName}/*              

  S3BucketMain:
    Type: AWS::S3::Bucket
    DependsOn: S3BucketLogs
    Properties:  
      BucketName: !Sub ${BucketName}
      #AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Sub ${LogBucketName}
        LogFilePrefix: access-log/
      PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
      Tags:
        - Key: "owner"
          Value: !Sub ${ResourceOwner}
    

  S3BucketPolicyMain:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref S3BucketMain
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: 
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 
              - s3:GetObject
            Resource: !Sub arn:aws:s3:::${BucketName}/*

Outputs:
  MainBucketARN:
    Description: The arn for the main bucket that got created
    Value: !GetAtt S3BucketMain.Arn
  LogBucketARN:
    Description: The arn for the main bucket that got created
    Value: !GetAtt S3BucketLogs.Arn