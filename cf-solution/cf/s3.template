AWSTemplateFormatVersion: '2010-09-09'
Description: Cloudformation template for creating AWS S3 Bucket

Parameters:
  BucketName:
    Type: String
    Description: Name for s3 bucket (Name must begin and end with a letter or number and consist only of lowercase letters, numbers, and hyphens (-).)
    AllowedPattern: (?=^.{3,63}$)^[a-z0-9][a-z0-9-]*[a-z0-9]
    ConstraintDescription: Name must begin and end with a letter or number and consist only of lowercase letters, numbers, and hyphens (-).

  IAMUser:
    Type: String
    Description: The name of the iam user to grant read access to the S3 bucket.

  LogBucketName:
    Type: String
    Description: Name for s3 bucket which stores the logs(Name must begin and end with a letter or number and consist only of lowercase letters, numbers, and hyphens (-).)
    AllowedPattern: (?=^.{3,63}$)^[a-z0-9][a-z0-9-]*[a-z0-9]
    ConstraintDescription: Name must begin and end with a letter or number and consist only of lowercase letters, numbers, and hyphens (-).

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:  
      BucketName: !Sub ${BucketName}-s3
      #AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Sub ${LogBucketName}
        LogFilePrefix: access-log/

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: 
                - !Sub "arn:aws:iam::${AWS::AccountId}:user/${IAMUser}"
            Action: 
              - s3:GetObject
            Resource: !Sub arn:aws:s3:::${BucketName}-s3/*

Outputs:
  BucketARN:
    Description: The arn for the bucket that got created
    Value: !GetAtt S3Bucket.Arn
